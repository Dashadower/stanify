
// Code generated by stanc v2.30.1
#include <stan/model/model_header.hpp>
namespace prey_predator_wpn_draws2data_model_namespace {

using stan::model::model_base_crtp;
using namespace stan::math;


stan::math::profile_map profiles__;
static constexpr std::array<const char*, 148> locations_array__ = 
{" (found before start of program)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 16, column 4 to column 39)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 17, column 4 to column 40)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 18, column 4 to column 41)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 19, column 4 to column 39)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 20, column 4 to column 47)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 23, column 4 to column 25)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 24, column 4 to column 114)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 25, column 4 to column 28)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 27, column 4 to column 30)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 28, column 4 to column 36)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 29, column 4 to column 45)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 30, column 4 to column 40)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 32, column 4 to column 130)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 33, column 4 to column 51)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 34, column 4 to column 60)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 35, column 4 to column 55)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 37, column 4 to column 69)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 38, column 4 to column 77)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 5, column 4 to column 12)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 6, column 4 to column 43)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 10, column 4 to column 28)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 11, column 10 to column 13)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 11, column 4 to column 100)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 32, column 32 to column 35)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 33, column 10 to column 13)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 34, column 10 to column 13)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 35, column 10 to column 13)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 4, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 5, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 98, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 99, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 100, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 97, column 23, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 97, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 93, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 94, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 95, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 92, column 23, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 92, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 88, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 89, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 90, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 87, column 23, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 87, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 83, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 84, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 85, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 82, column 23, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 82, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 78, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 79, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 80, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 77, column 23, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 77, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 73, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 74, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 75, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 72, column 23, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 72, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 68, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 69, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 70, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 67, column 23, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 67, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 63, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 64, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 65, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 62, column 23, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 62, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 58, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 59, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 60, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 57, column 23, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 57, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 53, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 54, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 55, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 52, column 23, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 52, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 48, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 49, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 50, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 47, column 22, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 47, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 43, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 44, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 45, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 42, column 22, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 42, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 38, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 39, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 40, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 37, column 22, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 37, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 33, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 34, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 35, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 32, column 22, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 32, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 28, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 29, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 30, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 27, column 22, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 27, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 23, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 24, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 25, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 22, column 22, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 22, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 18, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 19, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 20, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 17, column 22, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 17, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 13, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 14, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 15, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 12, column 22, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 12, column 9, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 8, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 9, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 10, column 8, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 7, column 17, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 7, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 102, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 2, column 53, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 106, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 109, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 110, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 111, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 113, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 114, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 115, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 116, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 117, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 118, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 119, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 120, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 121, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 122, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 123, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 124, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 126, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 127, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 128, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 130, column 4, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)",
 " (in '/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_functions.stan', line 105, column 96, included from\n'/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files/prey_predator_wpn_draws2data.stan', line 2, column 0)"};

struct dataFunc__process_noise_std_norm_data_functor__ {
  template <typename T0__,
            stan::require_all_t<stan::is_stan_scalar<T0__>>* = nullptr>
  stan::promote_args_t<T0__>
  operator()(const T0__& time, std::ostream* pstream__) const;
};
struct vensim_ode_func_functor__ {
  template <typename T0__, typename T1__, typename T2__, typename T3__,
            typename T4__, typename T5__,
            stan::require_all_t<stan::is_stan_scalar<T0__>,
                                stan::is_col_vector<T1__>,
                                stan::is_vt_not_complex<T1__>,
                                stan::is_stan_scalar<T2__>,
                                stan::is_stan_scalar<T3__>,
                                stan::is_stan_scalar<T4__>,
                                stan::is_stan_scalar<T5__>>* = nullptr>
  Eigen::Matrix<stan::promote_args_t<T0__, stan::base_type_t<T1__>, T2__, T3__, T4__,
                       stan::promote_args_t<T5__>>, -1, 1>
  operator()(const T0__& time, const T1__& outcome, const T2__& alpha,
             const T3__& beta, const T4__& delta, const T5__& gamma,
             std::ostream* pstream__) const;
};
struct vensim_ode_func_odefunctor__ {
  template <typename T0__, typename T1__, typename T2__, typename T3__,
            typename T4__, typename T5__,
            stan::require_all_t<stan::is_stan_scalar<T0__>,
                                stan::is_col_vector<T1__>,
                                stan::is_vt_not_complex<T1__>,
                                stan::is_stan_scalar<T2__>,
                                stan::is_stan_scalar<T3__>,
                                stan::is_stan_scalar<T4__>,
                                stan::is_stan_scalar<T5__>>* = nullptr>
  Eigen::Matrix<stan::promote_args_t<T0__, stan::base_type_t<T1__>, T2__, T3__, T4__,
                       stan::promote_args_t<T5__>>, -1, 1>
  operator()(const T0__& time, const T1__& outcome, std::ostream* pstream__,
             const T2__& alpha, const T3__& beta, const T4__& delta,
             const T5__& gamma) const;
};

template <typename T0__,
          stan::require_all_t<stan::is_stan_scalar<T0__>>* = nullptr>
  stan::promote_args_t<T0__>
  dataFunc__process_noise_std_norm_data(const T0__& time,
                                        std::ostream* pstream__) {
    using local_scalar_t__ = stan::promote_args_t<T0__>;
    int current_statement__ = 0; 
    static constexpr bool propto__ = true;
    (void) propto__;
    local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
    (void) DUMMY_VAR__;  // suppress unused var warning
    try {
      local_scalar_t__ slope = DUMMY_VAR__;
      local_scalar_t__ intercept = DUMMY_VAR__;
      current_statement__ = 124;
      if (stan::math::logical_lte(time, 1)) {
        current_statement__ = 120;
        intercept = -0.48619070682138205;
        current_statement__ = 121;
        slope = (-0.4778976936620191 - -0.48619070682138205);
        current_statement__ = 122;
        return (intercept + (slope * (time - -0.48619070682138205)));
      } else {
        current_statement__ = 119;
        if (stan::math::logical_lte(time, 2)) {
          current_statement__ = 115;
          intercept = -0.4778976936620191;
          current_statement__ = 116;
          slope = (-0.3219799628729971 - -0.4778976936620191);
          current_statement__ = 117;
          return (intercept + (slope * (time - -0.4778976936620191)));
        } else {
          current_statement__ = 114;
          if (stan::math::logical_lte(time, 3)) {
            current_statement__ = 110;
            intercept = -0.3219799628729971;
            current_statement__ = 111;
            slope = (-1.3079993067868714 - -0.3219799628729971);
            current_statement__ = 112;
            return (intercept + (slope * (time - -0.3219799628729971)));
          } else {
            current_statement__ = 109;
            if (stan::math::logical_lte(time, 4)) {
              current_statement__ = 105;
              intercept = -1.3079993067868714;
              current_statement__ = 106;
              slope = (0.6955802465655189 - -1.3079993067868714);
              current_statement__ = 107;
              return (intercept + (slope * (time - -1.3079993067868714)));
            } else {
              current_statement__ = 104;
              if (stan::math::logical_lte(time, 5)) {
                current_statement__ = 100;
                intercept = 0.6955802465655189;
                current_statement__ = 101;
                slope = (0.022755936241160353 - 0.6955802465655189);
                current_statement__ = 102;
                return (intercept + (slope * (time - 0.6955802465655189)));
              } else {
                current_statement__ = 99;
                if (stan::math::logical_lte(time, 6)) {
                  current_statement__ = 95;
                  intercept = 0.022755936241160353;
                  current_statement__ = 96;
                  slope = (-0.17294710647998812 - 0.022755936241160353);
                  current_statement__ = 97;
                  return (intercept +
                           (slope * (time - 0.022755936241160353)));
                } else {
                  current_statement__ = 94;
                  if (stan::math::logical_lte(time, 7)) {
                    current_statement__ = 90;
                    intercept = -0.17294710647998812;
                    current_statement__ = 91;
                    slope = (0.9860242539996403 - -0.17294710647998812);
                    current_statement__ = 92;
                    return (intercept +
                             (slope * (time - -0.17294710647998812)));
                  } else {
                    current_statement__ = 89;
                    if (stan::math::logical_lte(time, 8)) {
                      current_statement__ = 85;
                      intercept = 0.9860242539996403;
                      current_statement__ = 86;
                      slope = (1.3746418668623144 - 0.9860242539996403);
                      current_statement__ = 87;
                      return (intercept +
                               (slope * (time - 0.9860242539996403)));
                    } else {
                      current_statement__ = 84;
                      if (stan::math::logical_lte(time, 9)) {
                        current_statement__ = 80;
                        intercept = 1.3746418668623144;
                        current_statement__ = 81;
                        slope = (-0.024227398995708634 - 1.3746418668623144);
                        current_statement__ = 82;
                        return (intercept +
                                 (slope * (time - 1.3746418668623144)));
                      } else {
                        current_statement__ = 79;
                        if (stan::math::logical_lte(time, 10)) {
                          current_statement__ = 75;
                          intercept = -0.024227398995708634;
                          current_statement__ = 76;
                          slope = (-0.5958176704633286 -
                                    -0.024227398995708634);
                          current_statement__ = 77;
                          return (intercept +
                                   (slope * (time - -0.024227398995708634)));
                        } else {
                          current_statement__ = 74;
                          if (stan::math::logical_lte(time, 11)) {
                            current_statement__ = 70;
                            intercept = -0.5958176704633286;
                            current_statement__ = 71;
                            slope = (-0.942115976792156 -
                                      -0.5958176704633286);
                            current_statement__ = 72;
                            return (intercept +
                                     (slope * (time - -0.5958176704633286)));
                          } else {
                            current_statement__ = 69;
                            if (stan::math::logical_lte(time, 12)) {
                              current_statement__ = 65;
                              intercept = -0.942115976792156;
                              current_statement__ = 66;
                              slope = (-1.758781232617312 -
                                        -0.942115976792156);
                              current_statement__ = 67;
                              return (intercept +
                                       (slope * (time - -0.942115976792156)));
                            } else {
                              current_statement__ = 64;
                              if (stan::math::logical_lte(time, 13)) {
                                current_statement__ = 60;
                                intercept = -1.758781232617312;
                                current_statement__ = 61;
                                slope = (-0.07735330008373553 -
                                          -1.758781232617312);
                                current_statement__ = 62;
                                return (intercept +
                                         (slope *
                                           (time - -1.758781232617312)));
                              } else {
                                current_statement__ = 59;
                                if (stan::math::logical_lte(time, 14)) {
                                  current_statement__ = 55;
                                  intercept = -0.07735330008373553;
                                  current_statement__ = 56;
                                  slope = (1.4197800455593017 -
                                            -0.07735330008373553);
                                  current_statement__ = 57;
                                  return (intercept +
                                           (slope *
                                             (time - -0.07735330008373553)));
                                } else {
                                  current_statement__ = 54;
                                  if (stan::math::logical_lte(time, 15)) {
                                    current_statement__ = 50;
                                    intercept = 1.4197800455593017;
                                    current_statement__ = 51;
                                    slope = (0.1692906791655775 -
                                              1.4197800455593017);
                                    current_statement__ = 52;
                                    return (intercept +
                                             (slope *
                                               (time - 1.4197800455593017)));
                                  } else {
                                    current_statement__ = 49;
                                    if (stan::math::logical_lte(time, 16)) {
                                      current_statement__ = 45;
                                      intercept = 0.1692906791655775;
                                      current_statement__ = 46;
                                      slope = (0.3426947118460419 -
                                                0.1692906791655775);
                                      current_statement__ = 47;
                                      return (intercept +
                                               (slope *
                                                 (time - 0.1692906791655775)));
                                    } else {
                                      current_statement__ = 44;
                                      if (stan::math::logical_lte(time, 17)) {
                                        current_statement__ = 40;
                                        intercept = 0.3426947118460419;
                                        current_statement__ = 41;
                                        slope = (-1.269926838065689 -
                                                  0.3426947118460419);
                                        current_statement__ = 42;
                                        return (intercept +
                                                 (slope *
                                                   (time -
                                                     0.3426947118460419)));
                                      } else {
                                        current_statement__ = 39;
                                        if (stan::math::logical_lte(time, 18)) {
                                          current_statement__ = 35;
                                          intercept = -1.269926838065689;
                                          current_statement__ = 36;
                                          slope = (1.5746135383466489 -
                                                    -1.269926838065689);
                                          current_statement__ = 37;
                                          return (intercept +
                                                   (slope *
                                                     (time -
                                                       -1.269926838065689)));
                                        } else {
                                          current_statement__ = 34;
                                          if (stan::math::logical_lte(time,
                                                19)) {
                                            current_statement__ = 30;
                                            intercept = 1.5746135383466489;
                                            current_statement__ = 31;
                                            slope = (1.741117608886478 -
                                                      1.5746135383466489);
                                            current_statement__ = 32;
                                            return (intercept +
                                                     (slope *
                                                       (time -
                                                         1.5746135383466489)));
                                          } 
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      current_statement__ = 125;
      return 1.741117608886478;
    } catch (const std::exception& e) {
      stan::lang::rethrow_located(e, locations_array__[current_statement__]);
    }
    }
template <typename T0__, typename T1__, typename T2__, typename T3__,
          typename T4__, typename T5__,
          stan::require_all_t<stan::is_stan_scalar<T0__>,
                              stan::is_col_vector<T1__>,
                              stan::is_vt_not_complex<T1__>,
                              stan::is_stan_scalar<T2__>,
                              stan::is_stan_scalar<T3__>,
                              stan::is_stan_scalar<T4__>,
                              stan::is_stan_scalar<T5__>>* = nullptr>
  Eigen::Matrix<stan::promote_args_t<T0__, stan::base_type_t<T1__>, T2__, T3__, T4__,
                     stan::promote_args_t<T5__>>, -1, 1>
  vensim_ode_func(const T0__& time, const T1__& outcome_arg__,
                  const T2__& alpha, const T3__& beta, const T4__& delta,
                  const T5__& gamma, std::ostream* pstream__) {
    using local_scalar_t__ =
            stan::promote_args_t<T0__, stan::base_type_t<T1__>, T2__, T3__,
                                 T4__, stan::promote_args_t<T5__>>;
    int current_statement__ = 0; 
    const auto& outcome = stan::math::to_ref(outcome_arg__);
    static constexpr bool propto__ = true;
    (void) propto__;
    local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
    (void) DUMMY_VAR__;  // suppress unused var warning
    try {
      Eigen::Matrix<local_scalar_t__, -1, 1> dydt =
         Eigen::Matrix<local_scalar_t__, -1, 1>::Constant(3, DUMMY_VAR__);
      local_scalar_t__ prey = DUMMY_VAR__;
      current_statement__ = 128;
      prey = stan::model::rvalue(outcome, "outcome",
               stan::model::index_uni(1));
      local_scalar_t__ process_noise = DUMMY_VAR__;
      current_statement__ = 129;
      process_noise = stan::model::rvalue(outcome, "outcome",
                        stan::model::index_uni(2));
      local_scalar_t__ predator = DUMMY_VAR__;
      current_statement__ = 130;
      predator = stan::model::rvalue(outcome, "outcome",
                   stan::model::index_uni(3));
      local_scalar_t__ prey_birth_rate = DUMMY_VAR__;
      current_statement__ = 131;
      prey_birth_rate = (alpha * prey);
      local_scalar_t__ predator_death_rate = DUMMY_VAR__;
      current_statement__ = 132;
      predator_death_rate = (gamma * predator);
      local_scalar_t__ time_step = DUMMY_VAR__;
      current_statement__ = 133;
      time_step = 0.03125;
      local_scalar_t__ process_noise_scale = DUMMY_VAR__;
      current_statement__ = 134;
      process_noise_scale = 1;
      local_scalar_t__ process_noise_corr_time = DUMMY_VAR__;
      current_statement__ = 135;
      process_noise_corr_time = 3;
      local_scalar_t__ white_noise = DUMMY_VAR__;
      current_statement__ = 136;
      white_noise = (2 -
                      (((((time_step / process_noise_corr_time) / time_step)
                          / stan::math::pow(process_noise_corr_time, 0.5)) *
                         dataFunc__process_noise_std_norm_data(
                           time, pstream__)) * process_noise_scale));
      local_scalar_t__ process_noise_chg_rate = DUMMY_VAR__;
      current_statement__ = 137;
      process_noise_chg_rate = (white_noise -
                                 (process_noise / process_noise_corr_time));
      local_scalar_t__ prey_death_rate = DUMMY_VAR__;
      current_statement__ = 138;
      prey_death_rate = ((beta * predator) * prey);
      local_scalar_t__ predator_birth_rate = DUMMY_VAR__;
      current_statement__ = 139;
      predator_birth_rate = ((((delta * prey) * predator) * 1) +
                              process_noise);
      local_scalar_t__ predator_dydt = DUMMY_VAR__;
      current_statement__ = 140;
      predator_dydt = (predator_birth_rate - predator_death_rate);
      local_scalar_t__ prey_dydt = DUMMY_VAR__;
      current_statement__ = 141;
      prey_dydt = (prey_birth_rate - prey_death_rate);
      local_scalar_t__ process_noise_dydt = DUMMY_VAR__;
      current_statement__ = 142;
      process_noise_dydt = process_noise_chg_rate;
      current_statement__ = 143;
      stan::model::assign(dydt, prey_dydt,
        "assigning variable dydt", stan::model::index_uni(1));
      current_statement__ = 144;
      stan::model::assign(dydt, process_noise_dydt,
        "assigning variable dydt", stan::model::index_uni(2));
      current_statement__ = 145;
      stan::model::assign(dydt, predator_dydt,
        "assigning variable dydt", stan::model::index_uni(3));
      current_statement__ = 146;
      return dydt;
    } catch (const std::exception& e) {
      stan::lang::rethrow_located(e, locations_array__[current_statement__]);
    }
    }
template <typename T0__, stan::require_all_t<stan::is_stan_scalar<T0__>>*>
stan::promote_args_t<T0__>
dataFunc__process_noise_std_norm_data_functor__::operator()(const T0__& time,
                                                            std::ostream* pstream__) 
const
{
  return dataFunc__process_noise_std_norm_data(time, pstream__);
}

template <typename T0__, typename T1__, typename T2__, typename T3__,
          typename T4__, typename T5__,
          stan::require_all_t<stan::is_stan_scalar<T0__>,
                              stan::is_col_vector<T1__>,
                              stan::is_vt_not_complex<T1__>,
                              stan::is_stan_scalar<T2__>,
                              stan::is_stan_scalar<T3__>,
                              stan::is_stan_scalar<T4__>,
                              stan::is_stan_scalar<T5__>>*>
Eigen::Matrix<stan::promote_args_t<T0__, stan::base_type_t<T1__>, T2__, T3__, T4__,
                     stan::promote_args_t<T5__>>, -1, 1>
vensim_ode_func_functor__::operator()(const T0__& time, const T1__& outcome,
                                      const T2__& alpha, const T3__& beta,
                                      const T4__& delta, const T5__& gamma,
                                      std::ostream* pstream__)  const
{
  return vensim_ode_func(time, outcome, alpha, beta, delta, gamma, pstream__);
}

template <typename T0__, typename T1__, typename T2__, typename T3__,
          typename T4__, typename T5__,
          stan::require_all_t<stan::is_stan_scalar<T0__>,
                              stan::is_col_vector<T1__>,
                              stan::is_vt_not_complex<T1__>,
                              stan::is_stan_scalar<T2__>,
                              stan::is_stan_scalar<T3__>,
                              stan::is_stan_scalar<T4__>,
                              stan::is_stan_scalar<T5__>>*>
Eigen::Matrix<stan::promote_args_t<T0__, stan::base_type_t<T1__>, T2__, T3__, T4__,
                     stan::promote_args_t<T5__>>, -1, 1>
vensim_ode_func_odefunctor__::operator()(const T0__& time,
                                         const T1__& outcome,
                                         std::ostream* pstream__,
                                         const T2__& alpha, const T3__& beta,
                                         const T4__& delta, const T5__& gamma) 
const
{
  return vensim_ode_func(time, outcome, alpha, beta, delta, gamma, pstream__);
}


class prey_predator_wpn_draws2data_model final : public model_base_crtp<prey_predator_wpn_draws2data_model> {

 private:
  int n_t;
  Eigen::Matrix<double, -1, 1> process_noise_std_norm_data_data__;
  double initial_time;
  std::vector<double> times; 
  Eigen::Map<Eigen::Matrix<double, -1, 1>> process_noise_std_norm_data{nullptr, 0};
 
 public:
  ~prey_predator_wpn_draws2data_model() { }
  
  inline std::string model_name() const final { return "prey_predator_wpn_draws2data_model"; }

  inline std::vector<std::string> model_compile_info() const noexcept {
    return std::vector<std::string>{"stanc_version = stanc3 v2.30.1", "stancflags = --include-paths=/Users/hyunjimoon/Dropbox/15879-Fall2022/Homeworks/HW7/stanify/stan_files"};
  }
  
  
  prey_predator_wpn_draws2data_model(stan::io::var_context& context__,
                                     unsigned int random_seed__ = 0,
                                     std::ostream* pstream__ = nullptr) : model_base_crtp(0) {
    int current_statement__ = 0;
    using local_scalar_t__ = double ;
    boost::ecuyer1988 base_rng__ = 
        stan::services::util::create_rng(random_seed__, 0);
    (void) base_rng__;  // suppress unused var warning
    static constexpr const char* function__ = "prey_predator_wpn_draws2data_model_namespace::prey_predator_wpn_draws2data_model";
    (void) function__;  // suppress unused var warning
    local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
    (void) DUMMY_VAR__;  // suppress unused var warning
    try {
      int pos__ = std::numeric_limits<int>::min();
      pos__ = 1;
      current_statement__ = 19;
      context__.validate_dims("data initialization","n_t","int",
           std::vector<size_t>{});
      n_t = std::numeric_limits<int>::min();
      
      
      current_statement__ = 19;
      n_t = context__.vals_i("n_t")[(1 - 1)];
      current_statement__ = 20;
      context__.validate_dims("data initialization",
          "process_noise_std_norm_data","double",
           std::vector<size_t>{static_cast<size_t>(20)});
      process_noise_std_norm_data_data__ = 
        Eigen::Matrix<double, -1, 1>::Constant(20,
          std::numeric_limits<double>::quiet_NaN());
      new (&process_noise_std_norm_data) Eigen::Map<Eigen::Matrix<double, -1, 1>>(process_noise_std_norm_data_data__.data(), 20);
        
      
      {
        std::vector<local_scalar_t__> process_noise_std_norm_data_flat__;
        current_statement__ = 20;
        process_noise_std_norm_data_flat__ = context__.vals_r("process_noise_std_norm_data");
        current_statement__ = 20;
        pos__ = 1;
        current_statement__ = 20;
        for (int sym1__ = 1; sym1__ <= 20; ++sym1__) {
          current_statement__ = 20;
          stan::model::assign(process_noise_std_norm_data,
            process_noise_std_norm_data_flat__[(pos__ - 1)],
            "assigning variable process_noise_std_norm_data", stan::model::index_uni(sym1__));
          current_statement__ = 20;
          pos__ = (pos__ + 1);
        }
      }
      current_statement__ = 21;
      initial_time = std::numeric_limits<double>::quiet_NaN();
      
      
      current_statement__ = 21;
      initial_time = 0.0;
      current_statement__ = 22;
      stan::math::validate_non_negative_index("times", "n_t", n_t);
      current_statement__ = 23;
      times = 
        std::vector<double>(n_t, std::numeric_limits<double>::quiet_NaN());
      
      
      current_statement__ = 23;
      stan::model::assign(times, std::vector<double>{1, 2, 3, 4, 5, 6, 7, 8,
        9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20},
        "assigning variable times");
      current_statement__ = 24;
      stan::math::validate_non_negative_index("integrated_result", "n_t", n_t);
      current_statement__ = 25;
      stan::math::validate_non_negative_index("prey", "n_t", n_t);
      current_statement__ = 26;
      stan::math::validate_non_negative_index("process_noise", "n_t", n_t);
      current_statement__ = 27;
      stan::math::validate_non_negative_index("predator", "n_t", n_t);
    } catch (const std::exception& e) {
      stan::lang::rethrow_located(e, locations_array__[current_statement__]);
    }
    num_params_r__ = 0U;
    
  }
  
  template <bool propto__, bool jacobian__ , typename VecR, typename VecI, 
  stan::require_vector_like_t<VecR>* = nullptr, 
  stan::require_vector_like_vt<std::is_integral, VecI>* = nullptr> 
  inline stan::scalar_type_t<VecR> log_prob_impl(VecR& params_r__,
                                                 VecI& params_i__,
                                                 std::ostream* pstream__ = nullptr) const {
    using T__ = stan::scalar_type_t<VecR>;
    using local_scalar_t__ = T__;
    T__ lp__(0.0);
    stan::math::accumulator<T__> lp_accum__;
    stan::io::deserializer<local_scalar_t__> in__(params_r__, params_i__);
    int current_statement__ = 0;
    local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
    (void) DUMMY_VAR__;  // suppress unused var warning
    static constexpr const char* function__ = "prey_predator_wpn_draws2data_model_namespace::log_prob";
    (void) function__;  // suppress unused var warning
    
    try {
      
    } catch (const std::exception& e) {
      stan::lang::rethrow_located(e, locations_array__[current_statement__]);
    }
    lp_accum__.add(lp__);
    return lp_accum__.sum();
    } // log_prob_impl() 
    
  template <typename RNG, typename VecR, typename VecI, typename VecVar, 
  stan::require_vector_like_vt<std::is_floating_point, VecR>* = nullptr, 
  stan::require_vector_like_vt<std::is_integral, VecI>* = nullptr, 
  stan::require_vector_vt<std::is_floating_point, VecVar>* = nullptr> 
  inline void write_array_impl(RNG& base_rng__, VecR& params_r__,
                               VecI& params_i__, VecVar& vars__,
                               const bool emit_transformed_parameters__ = true,
                               const bool emit_generated_quantities__ = true,
                               std::ostream* pstream__ = nullptr) const {
    using local_scalar_t__ = double;
    stan::io::deserializer<local_scalar_t__> in__(params_r__, params_i__);
    stan::io::serializer<local_scalar_t__> out__(vars__);
    static constexpr bool propto__ = true;
    (void) propto__;
    double lp__ = 0.0;
    (void) lp__;  // dummy to suppress unused var warning
    int current_statement__ = 0; 
    stan::math::accumulator<double> lp_accum__;
    local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
    constexpr bool jacobian__ = false;
    (void) DUMMY_VAR__;  // suppress unused var warning
    static constexpr const char* function__ = "prey_predator_wpn_draws2data_model_namespace::write_array";
    (void) function__;  // suppress unused var warning
    
    try {
      if (stan::math::logical_negation((stan::math::primitive_value(
            emit_transformed_parameters__) || stan::math::primitive_value(
            emit_generated_quantities__)))) {
        return ;
      } 
      if (stan::math::logical_negation(emit_generated_quantities__)) {
        return ;
      } 
      double alpha = std::numeric_limits<double>::quiet_NaN();
      current_statement__ = 1;
      alpha = stan::math::normal_rng(0.8, 0.08, base_rng__);
      double beta = std::numeric_limits<double>::quiet_NaN();
      current_statement__ = 2;
      beta = stan::math::normal_rng(0.05, 0.005, base_rng__);
      double delta = std::numeric_limits<double>::quiet_NaN();
      current_statement__ = 3;
      delta = stan::math::normal_rng(0.05, 0.005, base_rng__);
      double gamma = std::numeric_limits<double>::quiet_NaN();
      current_statement__ = 4;
      gamma = stan::math::normal_rng(0.8, 0.08, base_rng__);
      double m_noise_scale = std::numeric_limits<double>::quiet_NaN();
      current_statement__ = 5;
      m_noise_scale = stan::math::normal_rng(0.5, 0.05, base_rng__);
      double prey__init = std::numeric_limits<double>::quiet_NaN();
      current_statement__ = 6;
      prey__init = 30;
      double process_noise__init = std::numeric_limits<double>::quiet_NaN();
      current_statement__ = 7;
      process_noise__init = (2 -
                              (((((0.03125 / 3) / 0.03125) /
                                  stan::math::pow(3, 0.5)) *
                                 dataFunc__process_noise_std_norm_data(
                                   0, pstream__)) * 1));
      double predator__init = std::numeric_limits<double>::quiet_NaN();
      current_statement__ = 8;
      predator__init = 4;
      Eigen::Matrix<double, -1, 1> initial_outcome =
         Eigen::Matrix<double, -1, 1>::Constant(3,
           std::numeric_limits<double>::quiet_NaN());
      current_statement__ = 10;
      stan::model::assign(initial_outcome, prey__init,
        "assigning variable initial_outcome", stan::model::index_uni(1));
      current_statement__ = 11;
      stan::model::assign(initial_outcome, process_noise__init,
        "assigning variable initial_outcome", stan::model::index_uni(2));
      current_statement__ = 12;
      stan::model::assign(initial_outcome, predator__init,
        "assigning variable initial_outcome", stan::model::index_uni(3));
      std::vector<Eigen::Matrix<double, -1, 1>> integrated_result =
         std::vector<Eigen::Matrix<double, -1, 1>>(n_t, 
           Eigen::Matrix<double, -1, 1>::Constant(3,
             std::numeric_limits<double>::quiet_NaN()));
      current_statement__ = 13;
      stan::model::assign(integrated_result,
        stan::math::ode_rk45(vensim_ode_func_odefunctor__(), initial_outcome,
          initial_time, times, pstream__, alpha, beta, delta, gamma),
        "assigning variable integrated_result");
      std::vector<double> prey =
         std::vector<double>(n_t, std::numeric_limits<double>::quiet_NaN());
      current_statement__ = 14;
      stan::model::assign(prey,
        stan::model::rvalue(integrated_result, "integrated_result",
          stan::model::index_omni(), stan::model::index_uni(1)),
        "assigning variable prey");
      std::vector<double> process_noise =
         std::vector<double>(n_t, std::numeric_limits<double>::quiet_NaN());
      current_statement__ = 15;
      stan::model::assign(process_noise,
        stan::model::rvalue(integrated_result, "integrated_result",
          stan::model::index_omni(), stan::model::index_uni(2)),
        "assigning variable process_noise");
      std::vector<double> predator =
         std::vector<double>(n_t, std::numeric_limits<double>::quiet_NaN());
      current_statement__ = 16;
      stan::model::assign(predator,
        stan::model::rvalue(integrated_result, "integrated_result",
          stan::model::index_omni(), stan::model::index_uni(3)),
        "assigning variable predator");
      Eigen::Matrix<double, -1, 1> prey_obs =
         Eigen::Matrix<double, -1, 1>::Constant(20,
           std::numeric_limits<double>::quiet_NaN());
      current_statement__ = 17;
      stan::model::assign(prey_obs,
        stan::math::to_vector(
          stan::math::normal_rng(prey, m_noise_scale, base_rng__)),
        "assigning variable prey_obs");
      Eigen::Matrix<double, -1, 1> predator_obs =
         Eigen::Matrix<double, -1, 1>::Constant(20,
           std::numeric_limits<double>::quiet_NaN());
      current_statement__ = 18;
      stan::model::assign(predator_obs,
        stan::math::to_vector(
          stan::math::normal_rng(predator, m_noise_scale, base_rng__)),
        "assigning variable predator_obs");
      out__.write(alpha);
      out__.write(beta);
      out__.write(delta);
      out__.write(gamma);
      out__.write(m_noise_scale);
      out__.write(prey__init);
      out__.write(process_noise__init);
      out__.write(predator__init);
      out__.write(initial_outcome);
      for (int sym1__ = 1; sym1__ <= 3; ++sym1__) {
        for (int sym2__ = 1; sym2__ <= n_t; ++sym2__) {
          out__.write(integrated_result[(sym2__ - 1)][(sym1__ - 1)]);
        }
      }
      out__.write(prey);
      out__.write(process_noise);
      out__.write(predator);
      out__.write(prey_obs);
      out__.write(predator_obs);
    } catch (const std::exception& e) {
      stan::lang::rethrow_located(e, locations_array__[current_statement__]);
    }
    } // write_array_impl() 
    
  template <typename VecVar, typename VecI, 
  stan::require_vector_t<VecVar>* = nullptr, 
  stan::require_vector_like_vt<std::is_integral, VecI>* = nullptr> 
  inline void transform_inits_impl(VecVar& params_r__, VecI& params_i__,
                                   VecVar& vars__,
                                   std::ostream* pstream__ = nullptr) const {
    using local_scalar_t__ = double;
    stan::io::deserializer<local_scalar_t__> in__(params_r__, params_i__);
    stan::io::serializer<local_scalar_t__> out__(vars__);
    int current_statement__ = 0;
    local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
    
    try {
      int pos__ = std::numeric_limits<int>::min();
      pos__ = 1;
    } catch (const std::exception& e) {
      stan::lang::rethrow_located(e, locations_array__[current_statement__]);
    }
    } // transform_inits_impl() 
    
  inline void get_param_names(std::vector<std::string>& names__) const {
    
    names__ = std::vector<std::string>{"alpha", "beta", "delta", "gamma",
      "m_noise_scale", "prey__init", "process_noise__init", "predator__init",
      "initial_outcome", "integrated_result", "prey", "process_noise",
      "predator", "prey_obs", "predator_obs"};
    
    } // get_param_names() 
    
  inline void get_dims(std::vector<std::vector<size_t>>& dimss__) const {
    
    dimss__ = std::vector<std::vector<size_t>>{std::vector<size_t>{},
      std::vector<size_t>{}, std::vector<size_t>{}, std::vector<size_t>{
      }, std::vector<size_t>{}, std::vector<size_t>{}, std::vector<size_t>{
      }, std::vector<size_t>{}, std::vector<size_t>{static_cast<size_t>(3)},
      std::vector<size_t>{static_cast<size_t>(n_t), static_cast<size_t>(3)},
      std::vector<size_t>{static_cast<size_t>(n_t)},
      std::vector<size_t>{static_cast<size_t>(n_t)},
      std::vector<size_t>{static_cast<size_t>(n_t)},
      std::vector<size_t>{static_cast<size_t>(20)},
      std::vector<size_t>{static_cast<size_t>(20)}};
    
    } // get_dims() 
    
  inline void constrained_param_names(
                                      std::vector<std::string>& param_names__,
                                      bool emit_transformed_parameters__ = true,
                                      bool emit_generated_quantities__ = true) const
    final {
    
    
    if (emit_transformed_parameters__) {
      
    }
    
    if (emit_generated_quantities__) {
      param_names__.emplace_back(std::string() + "alpha");
      param_names__.emplace_back(std::string() + "beta");
      param_names__.emplace_back(std::string() + "delta");
      param_names__.emplace_back(std::string() + "gamma");
      param_names__.emplace_back(std::string() + "m_noise_scale");
      param_names__.emplace_back(std::string() + "prey__init");
      param_names__.emplace_back(std::string() + "process_noise__init");
      param_names__.emplace_back(std::string() + "predator__init");
      for (int sym1__ = 1; sym1__ <= 3; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "initial_outcome" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 3; ++sym1__) {
        {
          for (int sym2__ = 1; sym2__ <= n_t; ++sym2__) {
            {
              param_names__.emplace_back(std::string() + "integrated_result" + '.' + std::to_string(sym2__) + '.' + std::to_string(sym1__));
            } 
          }
        } 
      }
      for (int sym1__ = 1; sym1__ <= n_t; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "prey" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= n_t; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "process_noise" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= n_t; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "predator" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 20; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "prey_obs" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 20; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "predator_obs" + '.' + std::to_string(sym1__));
        } 
      }
    }
    
    } // constrained_param_names() 
    
  inline void unconstrained_param_names(
                                        std::vector<std::string>& param_names__,
                                        bool emit_transformed_parameters__ = true,
                                        bool emit_generated_quantities__ = true) const
    final {
    
    
    if (emit_transformed_parameters__) {
      
    }
    
    if (emit_generated_quantities__) {
      param_names__.emplace_back(std::string() + "alpha");
      param_names__.emplace_back(std::string() + "beta");
      param_names__.emplace_back(std::string() + "delta");
      param_names__.emplace_back(std::string() + "gamma");
      param_names__.emplace_back(std::string() + "m_noise_scale");
      param_names__.emplace_back(std::string() + "prey__init");
      param_names__.emplace_back(std::string() + "process_noise__init");
      param_names__.emplace_back(std::string() + "predator__init");
      for (int sym1__ = 1; sym1__ <= 3; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "initial_outcome" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 3; ++sym1__) {
        {
          for (int sym2__ = 1; sym2__ <= n_t; ++sym2__) {
            {
              param_names__.emplace_back(std::string() + "integrated_result" + '.' + std::to_string(sym2__) + '.' + std::to_string(sym1__));
            } 
          }
        } 
      }
      for (int sym1__ = 1; sym1__ <= n_t; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "prey" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= n_t; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "process_noise" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= n_t; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "predator" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 20; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "prey_obs" + '.' + std::to_string(sym1__));
        } 
      }
      for (int sym1__ = 1; sym1__ <= 20; ++sym1__) {
        {
          param_names__.emplace_back(std::string() + "predator_obs" + '.' + std::to_string(sym1__));
        } 
      }
    }
    
    } // unconstrained_param_names() 
    
  inline std::string get_constrained_sizedtypes() const {
    
    return std::string("[{\"name\":\"alpha\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"beta\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"delta\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"gamma\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"m_noise_scale\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"prey__init\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"process_noise__init\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"predator__init\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"initial_outcome\",\"type\":{\"name\":\"vector\",\"length\":" + std::to_string(3) + "},\"block\":\"generated_quantities\"},{\"name\":\"integrated_result\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(n_t) + ",\"element_type\":{\"name\":\"vector\",\"length\":" + std::to_string(3) + "}},\"block\":\"generated_quantities\"},{\"name\":\"prey\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(n_t) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"generated_quantities\"},{\"name\":\"process_noise\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(n_t) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"generated_quantities\"},{\"name\":\"predator\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(n_t) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"generated_quantities\"},{\"name\":\"prey_obs\",\"type\":{\"name\":\"vector\",\"length\":" + std::to_string(20) + "},\"block\":\"generated_quantities\"},{\"name\":\"predator_obs\",\"type\":{\"name\":\"vector\",\"length\":" + std::to_string(20) + "},\"block\":\"generated_quantities\"}]");
    
    } // get_constrained_sizedtypes() 
    
  inline std::string get_unconstrained_sizedtypes() const {
    
    return std::string("[{\"name\":\"alpha\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"beta\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"delta\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"gamma\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"m_noise_scale\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"prey__init\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"process_noise__init\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"predator__init\",\"type\":{\"name\":\"real\"},\"block\":\"generated_quantities\"},{\"name\":\"initial_outcome\",\"type\":{\"name\":\"vector\",\"length\":" + std::to_string(3) + "},\"block\":\"generated_quantities\"},{\"name\":\"integrated_result\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(n_t) + ",\"element_type\":{\"name\":\"vector\",\"length\":" + std::to_string(3) + "}},\"block\":\"generated_quantities\"},{\"name\":\"prey\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(n_t) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"generated_quantities\"},{\"name\":\"process_noise\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(n_t) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"generated_quantities\"},{\"name\":\"predator\",\"type\":{\"name\":\"array\",\"length\":" + std::to_string(n_t) + ",\"element_type\":{\"name\":\"real\"}},\"block\":\"generated_quantities\"},{\"name\":\"prey_obs\",\"type\":{\"name\":\"vector\",\"length\":" + std::to_string(20) + "},\"block\":\"generated_quantities\"},{\"name\":\"predator_obs\",\"type\":{\"name\":\"vector\",\"length\":" + std::to_string(20) + "},\"block\":\"generated_quantities\"}]");
    
    } // get_unconstrained_sizedtypes() 
    
  
    // Begin method overload boilerplate
    template <typename RNG>
    inline void write_array(RNG& base_rng,
                            Eigen::Matrix<double,Eigen::Dynamic,1>& params_r,
                            Eigen::Matrix<double,Eigen::Dynamic,1>& vars,
                            const bool emit_transformed_parameters = true,
                            const bool emit_generated_quantities = true,
                            std::ostream* pstream = nullptr) const {
      const size_t num_params__ = 0;
      const size_t num_transformed = emit_transformed_parameters * 0;
      const size_t num_gen_quantities = emit_generated_quantities * 
  ((((((((((((((1 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 3) + (n_t * 3)) + n_t)
       + n_t) + n_t) + 20) + 20);
      const size_t num_to_write = num_params__ + num_transformed +
        num_gen_quantities;
      std::vector<int> params_i;
      vars = Eigen::Matrix<double, Eigen::Dynamic, 1>::Constant(num_to_write,
        std::numeric_limits<double>::quiet_NaN());
      write_array_impl(base_rng, params_r, params_i, vars,
        emit_transformed_parameters, emit_generated_quantities, pstream);
    }

    template <typename RNG>
    inline void write_array(RNG& base_rng, std::vector<double>& params_r,
                            std::vector<int>& params_i,
                            std::vector<double>& vars,
                            bool emit_transformed_parameters = true,
                            bool emit_generated_quantities = true,
                            std::ostream* pstream = nullptr) const {
      const size_t num_params__ = 0;
      const size_t num_transformed = emit_transformed_parameters * 0;
      const size_t num_gen_quantities = emit_generated_quantities * 
  ((((((((((((((1 + 1) + 1) + 1) + 1) + 1) + 1) + 1) + 3) + (n_t * 3)) + n_t)
       + n_t) + n_t) + 20) + 20);
      const size_t num_to_write = num_params__ + num_transformed +
        num_gen_quantities;
      vars = std::vector<double>(num_to_write,
        std::numeric_limits<double>::quiet_NaN());
      write_array_impl(base_rng, params_r, params_i, vars,
        emit_transformed_parameters, emit_generated_quantities, pstream);
    }

    template <bool propto__, bool jacobian__, typename T_>
    inline T_ log_prob(Eigen::Matrix<T_,Eigen::Dynamic,1>& params_r,
                       std::ostream* pstream = nullptr) const {
      Eigen::Matrix<int, -1, 1> params_i;
      return log_prob_impl<propto__, jacobian__>(params_r, params_i, pstream);
    }

    template <bool propto__, bool jacobian__, typename T__>
    inline T__ log_prob(std::vector<T__>& params_r,
                        std::vector<int>& params_i,
                        std::ostream* pstream = nullptr) const {
      return log_prob_impl<propto__, jacobian__>(params_r, params_i, pstream);
    }


    inline void transform_inits(const stan::io::var_context& context,
                         Eigen::Matrix<double, Eigen::Dynamic, 1>& params_r,
                         std::ostream* pstream = nullptr) const final {
      std::vector<double> params_r_vec(params_r.size());
      std::vector<int> params_i;
      transform_inits(context, params_i, params_r_vec, pstream);
      params_r = Eigen::Map<Eigen::Matrix<double,Eigen::Dynamic,1>>(
        params_r_vec.data(), params_r_vec.size());
    }

  inline void transform_inits(const stan::io::var_context& context,
                              std::vector<int>& params_i,
                              std::vector<double>& vars,
                              std::ostream* pstream__ = nullptr) const {
     constexpr std::array<const char*, 0> names__{};
      const std::array<Eigen::Index, 0> constrain_param_sizes__{};
      const auto num_constrained_params__ = std::accumulate(
        constrain_param_sizes__.begin(), constrain_param_sizes__.end(), 0);
    
     std::vector<double> params_r_flat__(num_constrained_params__);
     Eigen::Index size_iter__ = 0;
     Eigen::Index flat_iter__ = 0;
     for (auto&& param_name__ : names__) {
       const auto param_vec__ = context.vals_r(param_name__);
       for (Eigen::Index i = 0; i < constrain_param_sizes__[size_iter__]; ++i) {
         params_r_flat__[flat_iter__] = param_vec__[i];
         ++flat_iter__;
       }
       ++size_iter__;
     }
     vars.resize(num_params_r__);
     transform_inits_impl(params_r_flat__, params_i, vars, pstream__);
    } // transform_inits() 
     }; } 
using stan_model = prey_predator_wpn_draws2data_model_namespace::prey_predator_wpn_draws2data_model;

#ifndef USING_R

// Boilerplate
stan::model::model_base& new_model(
        stan::io::var_context& data_context,
        unsigned int seed,
        std::ostream* msg_stream) {
  stan_model* m = new stan_model(data_context, seed, msg_stream);
  return *m;
}

stan::math::profile_map& get_stan_profile_data() {
  return prey_predator_wpn_draws2data_model_namespace::profiles__;
}

#endif


